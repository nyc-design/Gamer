[tool.poetry]
name = "provisioner-api"
version = "1.0.0"
description = "VM provisioning and lifecycle management for cloud gaming"
authors = ["Gamer Team"]
package-mode = false

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
httpx = "^0.25.2"
google-cloud-compute = "^1.30.0"
google-cloud-billing = "^1.12.0"
python-multipart = "^0.0.6"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
pymongo = "^4.6.1"
geopy = "^2.4.1"
cryptography = "^41.0.0"

[tool.poetry.group.dev.dependencies]
# Code formatting and linting
black = "^23.0.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.5.0"

[tool.poetry.group.test.dependencies]
# Core Testing Framework
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-mock = "^3.11.0"
pytest-cov = "^4.1.0"
pytest-xdist = "^3.3.0"

# HTTP Testing and Mocking
respx = "^0.20.0"
responses = "^0.23.0"

# Pydantic Factories for Model Creation
pydantic-factories = "^1.17.0"
polyfactory = "^2.7.0"

# Faker for realistic test data
faker = "^19.0.0"

# Time and Date Testing
freezegun = "^1.2.0"

# Database Testing
mongomock = "^4.1.0"

# Additional Testing Utilities
factory-boy = "^3.3.0"
deepdiff = "^6.3.0"

[tool.poetry.group.integration.dependencies]
# Heavy integration test dependencies (optional group)
testcontainers = "^3.7.0"
pytest-docker = "^2.0.0"
pytest-mongodb = "^2.4.0"

[tool.poetry.group.performance.dependencies]
# Performance testing (optional group)
pytest-benchmark = "^4.0.0"
locust = "^2.15.0"

[tool.poetry.group.reporting.dependencies]
# Advanced reporting (optional group)
pytest-html = "^3.2.0"
allure-pytest = "^2.13.0"

# Mark integration and performance groups as optional
[tool.poetry.group.integration]
optional = true

[tool.poetry.group.performance]
optional = true

[tool.poetry.group.reporting]
optional = true

# Tool configurations
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app", "tests"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.coverage.run]
source = ["app"]
omit = ["*/tests/*", "*/venv/*", "*/.venv/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"